<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EliteAPI</name>
    </assembly>
    <members>
        <member name="T:EliteAPI.Discord.RichPresence">
            <summary>
            Class used to update the Rich Presence with.
            </summary>
        </member>
        <member name="M:EliteAPI.Discord.RichPresence.#ctor">
            <summary>
            Empty constructor for a rich presence.
            </summary>
        </member>
        <member name="M:EliteAPI.Discord.RichPresence.#ctor(System.String)">
            <summary>
            Basic constructor for a rich presence.
            </summary>
            <param name="line1">The first line of text.</param>
        </member>
        <member name="M:EliteAPI.Discord.RichPresence.#ctor(System.String,System.String)">
            <summary>
            Basic constructor for a rich presence.
            </summary>
            <param name="line1">The first line of text.</param>
            <param name="line2">The second line of text.</param>
        </member>
        <member name="P:EliteAPI.Discord.RichPresence.Text">
            <summary>
            The first line of text.
            </summary>
        </member>
        <member name="P:EliteAPI.Discord.RichPresence.TextTwo">
            <summary>
            The second line of text.
            </summary>
        </member>
        <member name="P:EliteAPI.Discord.RichPresence.Icon">
            <summary>
            The main icon ID.
            </summary>
        </member>
        <member name="P:EliteAPI.Discord.RichPresence.IconText">
            <summary>
            The text that should be displayed when hovering over the main icon.
            </summary>
        </member>
        <member name="P:EliteAPI.Discord.RichPresence.IconTwo">
            <summary>
            The secondary icon ID.
            </summary>
        </member>
        <member name="P:EliteAPI.Discord.RichPresence.IconTextTwo">
            <summary>
            The text that should be displayed when hovering over the secondary icon.
            </summary>
        </member>
        <member name="P:EliteAPI.Discord.RichPresenceClient.IsRunning">
            <summary>
            Whether the rich presence is running.
            </summary>
        </member>
        <member name="P:EliteAPI.Discord.RichPresenceClient.IsReady">
            <summary>
            Whether the rich presence is connected and ready.
            </summary>
        </member>
        <member name="M:EliteAPI.Discord.RichPresenceClient.#ctor(EliteAPI.EliteDangerousAPI)">
            <summary>
            Creates a new Discord Rich Presence client based on the EliteDangerousAPI object.
            </summary>
            <param name="api">EliteDangerousAPI</param>
        </member>
        <member name="M:EliteAPI.Discord.RichPresenceClient.#ctor(EliteAPI.EliteDangerousAPI,System.String)">
            <summary>
            Creates a new Discord Rich Presence client based on the EliteDangerousAPI object, with a custom RPC ID, for when you have your own Rich Presence registered with Discord.
            </summary>
            <param name="api">EliteDangerousAPI</param>
        </member>
        <member name="M:EliteAPI.Discord.RichPresenceClient.WithCustomID(System.String)">
            <summary>
            Set a custom ID to be used, for when you have your own RPC registered with Discord.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EliteAPI.Discord.RichPresenceClient.UpdatePresence(EliteAPI.Discord.RichPresence)">
            <summary>
            Update the rich presence.
            </summary>
            <param name="presence">The custom rich presence to display.</param>
        </member>
        <member name="M:EliteAPI.Discord.RichPresenceClient.TurnOn(System.Boolean)">
            <summary>
            Turn the rich presence on.
            </summary>
            <param name="automatic">Whether to have EliteAPI send events to the presence.</param>
        </member>
        <member name="M:EliteAPI.Discord.RichPresenceClient.TurnOff">
            <summary>
            Turn the rich presence off.
            </summary>
        </member>
        <member name="M:EliteAPI.EDSM.EDSMConnection.Execute(EliteAPI.EDSM.EDSMEntry)">
            <summary>
            Executes an EDSM API request.
            </summary>
            <param name="entry">The entry to process.</param>
            <returns></returns>
        </member>
        <member name="T:EliteAPI.EDSM.EDSMEntry">
            <summary>
            An entry for the EDSM API.
            </summary>
        </member>
        <member name="M:EliteAPI.EDSM.EDSMEntry.#ctor(System.String,EliteAPI.EDSM.EDSMParameter)">
            <summary>
            Creates a new EDSM API entry.
            </summary>
            <param name="url">The base URL for the API call.</param>
            <param name="parameter">The parameters for the API call.</param>
        </member>
        <member name="M:EliteAPI.EDSM.EDSMEntry.#ctor(System.String,System.Collections.Generic.List{EliteAPI.EDSM.EDSMParameter})">
            <summary>
            Creates a new EDSM API entry.
            </summary>
            <param name="url">The base URL for the API call.</param>
            <param name="parameters">A list of parameters for the API call.</param>
        </member>
        <member name="P:EliteAPI.EDSM.EDSMEntry.Url">
            <summary>
            The base URL of the API call.
            </summary>
        </member>
        <member name="P:EliteAPI.EDSM.EDSMEntry.Parameters">
            <summary>
            The list of parameters for the API call.
            </summary>
        </member>
        <member name="T:EliteAPI.EDSM.EDSMParameter">
            <summary>
            A parameter for an EDSM API call.
            </summary>
        </member>
        <member name="M:EliteAPI.EDSM.EDSMParameter.#ctor(System.String,System.Object)">
            <summary>
            Creates a new EDSM parameter.
            </summary>
            <param name="name">The name of the parameter.</param>
            <param name="value">The value of the parameter.</param>
        </member>
        <member name="P:EliteAPI.EDSM.EDSMParameter.Name">
            <summary>
            The name of the parameter.
            </summary>
        </member>
        <member name="P:EliteAPI.EDSM.EDSMParameter.Value">
            <summary>
            The value of the parameter.
            </summary>
        </member>
        <member name="T:EliteAPI.EliteDangerousAPI">
            <summary>
            Main EliteAPI class.
            </summary>
        </member>
        <member name="P:EliteAPI.EliteDangerousAPI.IsReady">
            <summary>
            Set to true when the API is ready.
            </summary>
        </member>
        <member name="P:EliteAPI.EliteDangerousAPI.StandardDirectory">
            <summary>
            The standard Directory of the Player Journal files (C:\Users\%username%\Saved Games\Frontier Developments\Elite Dangerous).
            </summary>
        </member>
        <member name="P:EliteAPI.EliteDangerousAPI.Version">
            <summary>
            The version of EliteAPI.
            </summary>
        </member>
        <member name="P:EliteAPI.EliteDangerousAPI.IsRunning">
            <summary>
            Whether the API is currently running.
            </summary>
        </member>
        <member name="P:EliteAPI.EliteDangerousAPI.JournalDirectory">
            <summary>
            The Journal directory that is being used by the API.
            </summary>
        </member>
        <member name="P:EliteAPI.EliteDangerousAPI.Events">
            <summary>
            Object that holds all the events.
            </summary>
        </member>
        <member name="P:EliteAPI.EliteDangerousAPI.Logger">
            <summary>
            Objects that holds all logging related functions.
            </summary>
        </member>
        <member name="P:EliteAPI.EliteDangerousAPI.Status">
            <summary>
            Holds the ship's current status.
            </summary>
        </member>
        <member name="P:EliteAPI.EliteDangerousAPI.Cargo">
            <summary>
            Holds the ship's current cargo situation.
            </summary>
        </member>
        <member name="P:EliteAPI.EliteDangerousAPI.Modules">
            <summary>
            Returns all the modules installed on the current ship.
            </summary>
        </member>
        <member name="P:EliteAPI.EliteDangerousAPI.Materials">
            <summary>
            Holds the ship's current materials situation.
            </summary>
        </member>
        <member name="P:EliteAPI.EliteDangerousAPI.Bindings">
            <summary>
            Holds information on all key bindings in the game set by the user.
            </summary>
        </member>
        <member name="P:EliteAPI.EliteDangerousAPI.Commander">
            <summary>
            Holds information about the commander.
            </summary>
        </member>
        <member name="P:EliteAPI.EliteDangerousAPI.Location">
            <summary>
            Holds information about the last known location of the commander.
            </summary>
        </member>
        <member name="P:EliteAPI.EliteDangerousAPI.DiscordRichPresence">
            <summary>
            Rich presence service for Discord.
            </summary>
        </member>
        <member name="P:EliteAPI.EliteDangerousAPI.SkipCatchUp">
            <summary>
            Whether the API should skip the processing of previous events before the API was started.
            </summary>
        </member>
        <member name="M:EliteAPI.EliteDangerousAPI.#ctor">
            <summary>
            Creates a new EliteDangerousAPI object using the standard Journal directory.
            </summary>
        </member>
        <member name="M:EliteAPI.EliteDangerousAPI.#ctor(System.IO.DirectoryInfo)">
            <summary>
            Creates a new EliteDangerousAPI object.
            </summary>
            <param name="JournalDirectory">The directory in which the Player Journals are located.</param>
        </member>
        <member name="M:EliteAPI.EliteDangerousAPI.#ctor(System.Boolean)">
            <summary>
            Creates a new EliteDangerousAPI object using the standard Journal directory.
            </summary>
            <param name="SkipCatchUp">Whether the API should skip the processing of previous events before the API was started.</param>
        </member>
        <member name="M:EliteAPI.EliteDangerousAPI.#ctor(System.IO.DirectoryInfo,System.Boolean)">
            <summary>
            Creates a new EliteDangerousAPI object.
            </summary>
            <param name="journalDirectory">The directory in which the Player Journals are located.</param>
            <param name="skipCatchUp">Whether the API should skip the processing of previous events before the API was started.</param>
        </member>
        <member name="M:EliteAPI.EliteDangerousAPI.CheckForUpdate">
            <summary>
            Checks for a new update.
            </summary>
            <returns>Returns true if a newer version is available.</returns>
        </member>
        <member name="M:EliteAPI.EliteDangerousAPI.Reset">
            <summary>
            Resets the API.
            </summary>
        </member>
        <member name="M:EliteAPI.EliteDangerousAPI.Start(System.Boolean)">
            <summary>
            Starts the API.
            </summary>
        </member>
        <member name="M:EliteAPI.EliteDangerousAPI.ChangeJournal(System.IO.DirectoryInfo)">
            <summary>
            Changes the journal directory.
            </summary>
            <param name="newJournalDirectory">The new journal directory.</param>
        </member>
        <member name="M:EliteAPI.EliteDangerousAPI.Stop">
            <summary>
            Stops the API.
            </summary>
        </member>
        <member name="E:EliteAPI.EliteDangerousAPI.OnReady">
            <summary>
            Gets triggered when EliteAPI has successfully loaded up.
            </summary>
        </member>
        <member name="E:EliteAPI.EliteDangerousAPI.OnQuit">
            <summary>
            Gets triggered when EliteAPI is closing.
            </summary>
        </member>
        <member name="E:EliteAPI.EliteDangerousAPI.OnError">
            <summary>
            Gets triggered when EliteAPI could not successfully load up.
            </summary>
        </member>
        <member name="E:EliteAPI.EliteDangerousAPI.OnLoad">
            <summary>
            Gets triggered when EliteAPI is starting up.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.AfmuRepairsInfo.Module">
            <summary>
            The name of the module
            </summary>
        </member>
        <member name="P:EliteAPI.Events.AfmuRepairsInfo.ModuleLocalised">
            <summary>
            The local name of the module
            </summary>
        </member>
        <member name="P:EliteAPI.Events.AfmuRepairsInfo.FullyRepaired">
            <summary>
            Whether modules are now fully repaired
            </summary>
        </member>
        <member name="P:EliteAPI.Events.AfmuRepairsInfo.Health">
            <summary>
            Value between 0 and 1.
            </summary>
        </member>
        <member name="T:EliteAPI.Events.Startup.CargoInfo">
            <summary>
            This event is written when the game has started.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.CargoInfo.Vessel">
            <summary>
            The type of vessel, either 'Ship' or 'SRV'.
            </summary>
            <see cref="T:EliteAPI.Events.Startup.VesselType"/>
        </member>
        <member name="P:EliteAPI.Events.Startup.CargoInfo.Count">
            <summary>
            The total amount of cargo in the vessel.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.CargoInfo.Inventory">
            <summary>
            A list of all inventory in the vessel, grouped by name.
            </summary>
            <see cref="T:EliteAPI.Events.Startup.InventoryInfo"/>
        </member>
        <member name="T:EliteAPI.Events.Startup.VesselType">
            <summary>
            The type of vessel, either 'Ship' or 'SRV'.
            </summary>
            <see cref="T:EliteAPI.Events.Startup.CargoInfo"/>
        </member>
        <member name="T:EliteAPI.Events.Startup.InventoryInfo">
            <summary>
            Inventory in the vessel, grouped by name.
            </summary>
            <see cref="T:EliteAPI.Events.Startup.CargoInfo"/>
        </member>
        <member name="P:EliteAPI.Events.Startup.InventoryInfo.Name">
            <summary>
            The name of the cargo item.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.InventoryInfo.NameLocalised">
            <summary>
            The localised name of the cargo item.
            Returns null when the 'Name' property is already localised.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.InventoryInfo.Count">
            <summary>
            The amount of cargo of this type.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.InventoryInfo.Stolen">
            <summary>
            The amount of stolen cargo of this type.
            </summary>
        </member>
        <member name="T:EliteAPI.Events.Startup.ClearSavedGameInfo">
            <summary>
            This event is written when the commander chooses to clear their save.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.ClearSavedGameInfo.Name">
            <summary>
            The commander's name.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.ClearSavedGameInfo.FID">
            <summary>
            The commander's Frontier ID.
            </summary>
        </member>
        <member name="T:EliteAPI.Events.Startup.CommanderInfo">
            <summary>
            This event is written when the game has started.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.CommanderInfo.FID">
            <summary>
            The commander's Frontier ID.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.CommanderInfo.Name">
            <summary>
            The commander's name.
            </summary>
        </member>
        <member name="T:EliteAPI.Events.Startup.LoadoutInfo">
            <summary>
            This event is written when the game has started, after switching ships, after outfitting, and after docking a SRV.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.LoadoutInfo.Ship">
            <summary>
            The type of ship.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.LoadoutInfo.ShipId">
            <summary>
            The id of the ship.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.LoadoutInfo.ShipName">
            <summary>
            The user-defined name of the ship.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.LoadoutInfo.ShipIdent">
            <summary>
            The user-defined id of the ship.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.LoadoutInfo.HullValue">
            <summary>
            The value of the integrity of the hull.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.LoadoutInfo.ModulesValue">
            <summary>
            The value of the integrity of the modules.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.LoadoutInfo.HullHealth">
            <summary>
            The health of the hull.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.LoadoutInfo.UnladenMass">
            <summary>
            The mass of the hull and all modules. Fuel and cargo are not included.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.LoadoutInfo.FuelCapacity">
            <summary>
            Information on the fuel of the ship.
            </summary>
            <see cref="T:EliteAPI.Events.Startup.FuelInfo"/>
        </member>
        <member name="P:EliteAPI.Events.Startup.LoadoutInfo.CargoCapacity">
            <summary>
            The maximum amount of cargo this ship can carry.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.LoadoutInfo.MaxJumpRange">
            <summary>
            The maximum jump range of the ship.
            </summary>
            <remarks>
            This value is based on no cargo and limited fuel.
            </remarks>
        </member>
        <member name="P:EliteAPI.Events.Startup.LoadoutInfo.Rebuy">
            <summary>
            The cost of rebuy.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.LoadoutInfo.Hot">
            <summary>
            Whether the ship is wanted.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.LoadoutInfo.Modules">
            <summary>
            A list of installed items on the ship.
            </summary>
            <see cref="T:EliteAPI.Events.Startup.ModuleInfo"/>
        </member>
        <member name="T:EliteAPI.Events.Startup.FuelInfo">
            <summary>
            Contains information about the fuel of the ship.
            </summary>
            <see cref="T:EliteAPI.Events.Startup.LoadoutInfo"/>
        </member>
        <member name="P:EliteAPI.Events.Startup.FuelInfo.Main">
            <summary>
            The amount of fuel in the main tank.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.FuelInfo.Reserve">
            <summary>
            The amount of fuel in the reserve tank.
            </summary>
        </member>
        <member name="T:EliteAPI.Events.Startup.ModuleInfo">
            <summary>
            An installed item on the ship.
            </summary>
            <see cref="T:EliteAPI.Events.Startup.LoadoutInfo"/>
        </member>
        <member name="P:EliteAPI.Events.Startup.ModuleInfo.Slot">
            <summary>
            The name of the slot.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.ModuleInfo.Item">
            <summary>
            The name of the module in this slow in lowercase.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.ModuleInfo.On">
            <summary>
            Whether this module is turned on.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.ModuleInfo.Priority">
            <summary>
            The priority group of power for this module.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.ModuleInfo.Health">
            <summary>
            The health of the module.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.ModuleInfo.Value">
            <summary>
            The value of the module.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.ModuleInfo.AmmoInClip">
            <summary>
            Amount of ammunition in the clip.
            Can also be amount of places in a passenger cabin.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.ModuleInfo.AmmoInHopper">
            <summary>
            The amount of ammunition in the hopper.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.ModuleInfo.EngineeringInfo">
            <summary>
            The engineering that has been done on this module.
            </summary>
            <see cref="P:EliteAPI.Events.Startup.ModuleInfo.EngineeringInfo"/>
        </member>
        <member name="T:EliteAPI.Events.Startup.EngineeringInfo">
            <summary>
            The engineering that has been done on a module.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.EngineeringInfo.Engineer">
            <summary>
            The name of the engineer.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.EngineeringInfo.EngineerId">
            <summary>
            The id of the engineer.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.EngineeringInfo.BlueprintId">
            <summary>
            The id of the blueprint.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.EngineeringInfo.BlueprintName">
            <summary>
            The name of the blueprint.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.EngineeringInfo.Level">
            <summary>
            The level of the modification.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.EngineeringInfo.Quality">
            <summary>
            The quality of the modification.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.EngineeringInfo.ExperimentalEffect">
            <summary>
            The experimental effect of the modification, if any.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.EngineeringInfo.ExperimentalEffectLocalised">
            <summary>
            The localised experimental effect of the modification, if any.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.EngineeringInfo.Modifiers">
            <summary>
            A list of modifiers for this modification, if any.
            </summary>
        </member>
        <member name="T:EliteAPI.Events.Startup.LoadOutModifier">
            <summary>
            The modifier applied on a modification.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.LoadOutModifier.Label">
            <summary>
            The label of this modifier.
            </summary>
            <see cref="T:EliteAPI.Events.Startup.ModifierLabel"/>
        </member>
        <member name="P:EliteAPI.Events.Startup.LoadOutModifier.Value">
            <summary>
            The value of this modifier.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.LoadOutModifier.ValueStr">
            <summary>
            The value of this modifier as a string.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.LoadOutModifier.OriginalValue">
            <summary>
            The original value before this modifier.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.Startup.LoadOutModifier.LessIsGood">
            <summary>
            Whether a lower value means better.
            </summary>
            <see cref="P:EliteAPI.Events.Startup.LoadOutModifier.Value"/>
        </member>
        <member name="T:EliteAPI.Events.Startup.ModifierLabel">
            <summary>
            The label of the modifier.
            </summary>
            <see cref="T:EliteAPI.Events.Startup.LoadOutModifier"/>
        </member>
        <member name="T:EliteAPI.IEliteDangerousAPI">
            <summary>
            Interface for the EliteDangerousAPI class.
            </summary>
        </member>
        <member name="P:EliteAPI.IEliteDangerousAPI.IsRunning">
            <summary>
            Whether the API is currently running.
            </summary>
        </member>
        <member name="P:EliteAPI.IEliteDangerousAPI.JournalDirectory">
            <summary>
            The Journal directory that is being used by the API.
            </summary>
        </member>
        <member name="P:EliteAPI.IEliteDangerousAPI.SkipCatchUp">
            <summary>
            Whether the API should skip the processing of previous events before the API was started.
            </summary>
        </member>
        <member name="P:EliteAPI.IEliteDangerousAPI.Events">
            <summary>
            Object that holds all the events.
            </summary>
        </member>
        <member name="P:EliteAPI.IEliteDangerousAPI.Logger">
            <summary>
            Objects that holds all logging related functions.
            </summary>
        </member>
        <member name="P:EliteAPI.IEliteDangerousAPI.Status">
            <summary>
            Holds the ship's current status.
            </summary>
        </member>
        <member name="P:EliteAPI.IEliteDangerousAPI.Cargo">
            <summary>
            Holds the ship's current cargo situation.
            </summary>
        </member>
        <member name="P:EliteAPI.IEliteDangerousAPI.Modules">
            <summary>
            Returns all the modules installed on the current ship.
            </summary>
        </member>
        <member name="P:EliteAPI.IEliteDangerousAPI.Bindings">
            <summary>
            Holds information on all key bindings in the game set by the user.
            </summary>
        </member>
        <member name="P:EliteAPI.IEliteDangerousAPI.Commander">
            <summary>
            Holds information about the commander.
            </summary>
        </member>
        <member name="P:EliteAPI.IEliteDangerousAPI.Location">
            <summary>
            Holds information about the last known location of the commander.
            </summary>
        </member>
        <member name="E:EliteAPI.IEliteDangerousAPI.OnError">
            <summary>
            Gets triggered when EliteAPI could not successfully load up.
            </summary>
        </member>
        <member name="E:EliteAPI.IEliteDangerousAPI.OnQuit">
            <summary>
            Gets triggered when EliteAPI is closing.
            </summary>
        </member>
        <member name="E:EliteAPI.IEliteDangerousAPI.OnReady">
            <summary>
            Gets triggered when EliteAPI has successfully loaded up.
            </summary>
        </member>
        <member name="P:EliteAPI.IEliteDangerousAPI.DiscordRichPresence">
            <summary>
            Rich presence service for Discord.
            </summary>
        </member>
        <member name="M:EliteAPI.IEliteDangerousAPI.Reset">
            <summary>
            Resets the API.
            </summary>
        </member>
        <member name="M:EliteAPI.IEliteDangerousAPI.Start(System.Boolean)">
            <summary>
            Starts the API.
            </summary>
            <param name="runRichPresence"></param>
        </member>
        <member name="M:EliteAPI.IEliteDangerousAPI.Stop">
            <summary>
            Stops the API.
            </summary>
        </member>
        <member name="M:EliteAPI.IEliteDangerousAPI.ChangeJournal(System.IO.DirectoryInfo)">
            <summary>
            Changes the journal directory.
            </summary>
            <param name="newJournalDirectory"></param>
        </member>
        <member name="T:EliteAPI.ThirdParty.ThirdPartyWrapper">
            <summary>
            Class that functions as a wrapper for third party plugins.
            </summary>
        </member>
        <member name="M:EliteAPI.ThirdParty.ThirdPartyWrapper.#ctor(EliteAPI.EliteDangerousAPI,System.String,System.String)">
            <summary>
            Creates a new ThirdPartyWrapper object.
            </summary>
            <param name="api">The EliteDangerousAPI api</param>
            <param name="name">The name of the plugin</param>
            <param name="iniPath">The path to the configuration file</param>
        </member>
        <member name="M:EliteAPI.ThirdParty.ThirdPartyWrapper.GetVariables">
            <summary>
            Returns all the variables to be set.
            </summary>
            <returns>A list of variables</returns>
        </member>
        <member name="M:EliteAPI.ThirdParty.ThirdPartyWrapper.GetRichPresenceSetting">
            <summary>
            Returns a value whether the API should automatically start the Discord Rich Presence.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EliteAPI.ThirdParty.ThirdPartyWrapper.GetEventVariables(System.Object)">
            <summary>
            Gets all the variables to be set from an event.
            </summary>
            <param name="e">A list of variables</param>
            <returns></returns>
        </member>
        <member name="M:EliteAPI.ThirdParty.ThirdPartyWrapper.GetEventName(System.Object)">
            <summary>
            Gets the name from an event.
            </summary>
            <param name="e">The name of the event.</param>
            <returns></returns>
        </member>
        <member name="M:EliteAPI.ThirdParty.ThirdPartyWrapper.GetIni">
            <summary>
            Returns the configuration file content.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EliteAPI.ThirdParty.ThirdPartyWrapper.GetJournalFolder">
            <summary>
            Gets the journal directory from the configuration file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EliteAPI.ThirdParty.ThirdPartyWrapper.GetLogFolder">
            <summary>
            Gets the log directory from the configuration file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EliteAPI.ThirdParty.ThirdPartyWrapper.ProcessCall(System.String)">
            <summary>
            Processes third party plugin functions
            </summary>
            <param name="content"></param>
        </member>
    </members>
</doc>
